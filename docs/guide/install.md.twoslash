{
  "version": 1,
  "fileHash": "d454494ce12fe9a6b0f8378012c20dde935644d35fc7552a6254ab59ed081856",
  "cache": {
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:316401fa1698680905ad6fa14c6a67f06df74efbc0cd4113753eeb005fdabeed": {
      "nodes": [
        {
          "type": "hover",
          "text": "(alias) const codeToHtml: (code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>) => Promise<string>\nimport codeToHtml",
          "start": 9,
          "length": 10,
          "target": "codeToHtml",
          "line": 0,
          "character": 9
        },
        {
          "type": "hover",
          "text": "const code: \"const a = 1\"",
          "start": 42,
          "length": 4,
          "target": "code",
          "line": 2,
          "character": 6
        },
        {
          "type": "hover",
          "text": "const html: string",
          "start": 83,
          "length": 4,
          "target": "html",
          "line": 3,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(alias) codeToHtml(code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>): Promise<string>\nimport codeToHtml",
          "start": 96,
          "length": 10,
          "target": "codeToHtml",
          "line": 3,
          "character": 19
        },
        {
          "type": "hover",
          "text": "const code: \"const a = 1\"",
          "start": 107,
          "length": 4,
          "target": "code",
          "line": 3,
          "character": 30
        },
        {
          "type": "hover",
          "text": "(property) lang: \"javascript\"",
          "start": 117,
          "length": 4,
          "target": "lang",
          "line": 4,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsSingleTheme<BundledTheme>.theme: ThemeRegistrationAny | StringLiteralUnion<BundledTheme, string>",
          "start": 139,
          "length": 5,
          "target": "theme",
          "line": 5,
          "character": 2
        },
        {
          "type": "hover",
          "text": "namespace console\nvar console: Console",
          "docs": "The `console` module provides a simple debugging console that is similar to the\nJavaScript console mechanism provided by web browsers.\n\nThe module exports two specific components:\n\n* A `Console` class with methods such as `console.log()`, `console.error()` and `console.warn()` that can be used to write to any Node.js stream.\n* A global `console` instance configured to write to [`process.stdout`](https://nodejs.org/docs/latest-v24.x/api/process.html#processstdout) and\n[`process.stderr`](https://nodejs.org/docs/latest-v24.x/api/process.html#processstderr). The global `console` can be used without importing the `node:console` module.\n\n_**Warning**_: The global console object's methods are neither consistently\nsynchronous like the browser APIs they resemble, nor are they consistently\nasynchronous like all other Node.js streams. See the [`note on process I/O`](https://nodejs.org/docs/latest-v24.x/api/process.html#a-note-on-process-io) for\nmore information.\n\nExample using the global `console`:\n\n```js\nconsole.log('hello world');\n// Prints: hello world, to stdout\nconsole.log('hello %s', 'world');\n// Prints: hello world, to stdout\nconsole.error(new Error('Whoops, something bad happened'));\n// Prints error message and stack trace to stderr:\n//   Error: Whoops, something bad happened\n//     at [eval]:5:15\n//     at Script.runInThisContext (node:vm:132:18)\n//     at Object.runInThisContext (node:vm:309:38)\n//     at node:internal/process/execution:77:19\n//     at [eval]-wrapper:6:22\n//     at evalScript (node:internal/process/execution:76:60)\n//     at node:internal/main/eval_string:23:3\n\nconst name = 'Will Robinson';\nconsole.warn(`Danger ${name}! Danger!`);\n// Prints: Danger Will Robinson! Danger!, to stderr\n```\n\nExample using the `Console` class:\n\n```js\nconst out = getStreamSomehow();\nconst err = getStreamSomehow();\nconst myConsole = new console.Console(out, err);\n\nmyConsole.log('hello world');\n// Prints: hello world, to out\nmyConsole.log('hello %s', 'world');\n// Prints: hello world, to out\nmyConsole.error(new Error('Whoops, something bad happened'));\n// Prints: [Error: Whoops, something bad happened], to err\n\nconst name = 'Will Robinson';\nmyConsole.warn(`Danger ${name}! Danger!`);\n// Prints: Danger Will Robinson! Danger!, to err\n```",
          "tags": [
            [
              "see",
              "[source](https://github.com/nodejs/node/blob/v24.x/lib/console.js)"
            ]
          ],
          "start": 165,
          "length": 7,
          "target": "console",
          "line": 8,
          "character": 0
        },
        {
          "type": "hover",
          "text": "(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)",
          "docs": "Prints to `stdout` with newline. Multiple arguments can be passed, with the\nfirst used as the primary message and all additional used as substitution\nvalues similar to [`printf(3)`](http://man7.org/linux/man-pages/man3/printf.3.html)\n(the arguments are all passed to [`util.format()`](https://nodejs.org/docs/latest-v24.x/api/util.html#utilformatformat-args)).\n\n```js\nconst count = 5;\nconsole.log('count: %d', count);\n// Prints: count: 5, to stdout\nconsole.log('count:', count);\n// Prints: count: 5, to stdout\n```\n\nSee [`util.format()`](https://nodejs.org/docs/latest-v24.x/api/util.html#utilformatformat-args) for more information.",
          "tags": [
            [
              "since",
              "v0.1.100"
            ]
          ],
          "start": 173,
          "length": 3,
          "target": "log",
          "line": 8,
          "character": 8
        },
        {
          "type": "hover",
          "text": "const html: string",
          "start": 177,
          "length": 4,
          "target": "html",
          "line": 8,
          "character": 12
        }
      ],
      "code": "import { codeToHtml } from 'shiki'\n\nconst code = 'const a = 1' // input code\nconst html = await codeToHtml(code, {\n  lang: 'javascript',\n  theme: 'vitesse-dark'\n})\n\nconsole.log(html) // highlighted html string",
      "meta": {
        "extension": "ts"
      }
    },
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:8ebd2ac789299e4c2719bf739c22c763fd019c26556180f74aa0a9f4c48e52e5": {
      "nodes": [
        {
          "type": "hover",
          "text": "(alias) const codeToTokens: (code: string, options: CodeToTokensOptions<BundledLanguage, BundledTheme>) => Promise<TokensResult>\nimport codeToTokens",
          "start": 9,
          "length": 12,
          "target": "codeToTokens",
          "line": 0,
          "character": 9
        },
        {
          "type": "hover",
          "text": "const tokens: ThemedToken[][]",
          "docs": "2D array of tokens, first dimension is lines, second dimension is tokens in a line.",
          "start": 46,
          "length": 6,
          "target": "tokens",
          "line": 2,
          "character": 8
        },
        {
          "type": "hover",
          "text": "(alias) codeToTokens(code: string, options: CodeToTokensOptions<BundledLanguage, BundledTheme>): Promise<TokensResult>\nimport codeToTokens",
          "start": 63,
          "length": 12,
          "target": "codeToTokens",
          "line": 2,
          "character": 25
        },
        {
          "type": "hover",
          "text": "(property) lang?: BundledLanguage | SpecialLanguage | undefined",
          "start": 110,
          "length": 4,
          "target": "lang",
          "line": 3,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsSingleTheme<BundledTheme>.theme: ThemeRegistrationAny | StringLiteralUnion<BundledTheme, string>",
          "start": 126,
          "length": 5,
          "target": "theme",
          "line": 4,
          "character": 2
        }
      ],
      "code": "import { codeToTokens } from 'shiki'\n\nconst { tokens } = await codeToTokens('<div class=\"foo\">bar</div>', {\n  lang: 'html',\n  theme: 'min-dark'\n})",
      "meta": {
        "extension": "ts"
      }
    },
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:62d0ec05667c74220570af1a25cbcd86337b2f983cc1bd30153d35afb2703377": {
      "nodes": [
        {
          "type": "hover",
          "text": "(alias) const codeToHast: (code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>) => Promise<Root>\nimport codeToHast",
          "start": 9,
          "length": 10,
          "target": "codeToHast",
          "line": 0,
          "character": 9
        },
        {
          "type": "hover",
          "text": "const hast: Root",
          "start": 42,
          "length": 4,
          "target": "hast",
          "line": 2,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(alias) codeToHast(code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>): Promise<Root>\nimport codeToHast",
          "start": 55,
          "length": 10,
          "target": "codeToHast",
          "line": 2,
          "character": 19
        },
        {
          "type": "hover",
          "text": "(property) lang: \"css\"",
          "start": 99,
          "length": 4,
          "target": "lang",
          "line": 3,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsSingleTheme<BundledTheme>.theme: ThemeRegistrationAny | StringLiteralUnion<BundledTheme, string>",
          "start": 114,
          "length": 5,
          "target": "theme",
          "line": 4,
          "character": 2
        }
      ],
      "code": "import { codeToHast } from 'shiki'\n\nconst hast = await codeToHast('.text-red { color: red; }', {\n  lang: 'css',\n  theme: 'catppuccin-mocha'\n})",
      "meta": {
        "extension": "ts"
      }
    },
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:ec6d1f796e697cd337a39aa8574a27101b2c9f9c824a2288b78e31276f28a742": {
      "nodes": [
        {
          "type": "hover",
          "text": "(alias) const createHighlighter: CreateHighlighterFactory<BundledLanguage, BundledTheme>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 9,
          "length": 17,
          "target": "createHighlighter",
          "line": 0,
          "character": 9
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 159,
          "length": 11,
          "target": "highlighter",
          "line": 4,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(alias) createHighlighter(options: BundledHighlighterOptions<BundledLanguage, BundledTheme>): Promise<HighlighterGeneric<BundledLanguage, BundledTheme>>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 179,
          "length": 17,
          "target": "createHighlighter",
          "line": 4,
          "character": 26
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.themes: (ThemeInput | \"none\" | StringLiteralUnion<BundledTheme, string>)[]",
          "docs": "Theme registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 201,
          "length": 6,
          "target": "themes",
          "line": 5,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.langs: (LanguageInput | SpecialLanguage | StringLiteralUnion<BundledLanguage, string>)[]",
          "docs": "Language registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 221,
          "length": 5,
          "target": "langs",
          "line": 6,
          "character": 2
        },
        {
          "type": "hover",
          "text": "const code: string",
          "start": 360,
          "length": 4,
          "target": "code",
          "line": 11,
          "character": 6
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 367,
          "length": 11,
          "target": "highlighter",
          "line": 11,
          "character": 13
        },
        {
          "type": "hover",
          "text": "(property) HighlighterGeneric<BundledLanguage, BundledTheme>.codeToHtml: (code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>) => string",
          "docs": "Get highlighted code in HTML string",
          "start": 379,
          "length": 10,
          "target": "codeToHtml",
          "line": 11,
          "character": 25
        },
        {
          "type": "hover",
          "text": "(property) lang: \"javascript\"",
          "start": 409,
          "length": 4,
          "target": "lang",
          "line": 12,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsSingleTheme<BundledTheme>.theme: ThemeRegistrationAny | StringLiteralUnion<BundledTheme, string>",
          "start": 431,
          "length": 5,
          "target": "theme",
          "line": 13,
          "character": 2
        }
      ],
      "code": "import { createHighlighter } from 'shiki'\n\n// `createHighlighter` is async, it initializes the internal and\n// loads the themes and languages specified.\nconst highlighter = await createHighlighter({\n  themes: ['nord'],\n  langs: ['javascript'],\n})\n\n// then later you can use `highlighter.codeToHtml` synchronously\n// with the loaded themes and languages.\nconst code = highlighter.codeToHtml('const a = 1', {\n  lang: 'javascript',\n  theme: 'nord'\n})",
      "meta": {
        "extension": "ts"
      }
    },
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:b8ef480ea4550b6b90c060a0672182d43578018d2b7c70cdbb8ea92a76b956b6": {
      "nodes": [
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 50,
          "length": 11,
          "target": "highlighter",
          "line": 1,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(property) ShikiInternal<BundledLanguage, BundledTheme>.loadTheme: (...themes: (BundledTheme | ThemeInput | \"none\")[]) => Promise<void>",
          "docs": "Load a theme to the highlighter, so later it can be used synchronously.",
          "start": 62,
          "length": 9,
          "target": "loadTheme",
          "line": 1,
          "character": 18
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 95,
          "length": 11,
          "target": "highlighter",
          "line": 2,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(property) ShikiInternal<BundledLanguage, BundledTheme>.loadLanguage: (...langs: (BundledLanguage | LanguageInput | SpecialLanguage)[]) => Promise<void>",
          "docs": "Load a language to the highlighter, so later it can be used synchronously.",
          "start": 107,
          "length": 12,
          "target": "loadLanguage",
          "line": 2,
          "character": 18
        }
      ],
      "code": "// load themes and languages after creation\nawait highlighter.loadTheme('vitesse-light')\nawait highlighter.loadLanguage('css')",
      "meta": {
        "extension": "ts"
      }
    },
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:b5a1ca99202abf6df779862f92366d75cd24d127f247f5f1ca126164e02a2967": {
      "nodes": [
        {
          "type": "hover",
          "text": "(alias) const createHighlighter: CreateHighlighterFactory<BundledLanguage, BundledTheme>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 9,
          "length": 17,
          "target": "createHighlighter",
          "line": 0,
          "character": 9
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 49,
          "length": 11,
          "target": "highlighter",
          "line": 2,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(alias) createHighlighter(options: BundledHighlighterOptions<BundledLanguage, BundledTheme>): Promise<HighlighterGeneric<BundledLanguage, BundledTheme>>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 69,
          "length": 17,
          "target": "createHighlighter",
          "line": 2,
          "character": 26
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.themes: (ThemeInput | \"none\" | StringLiteralUnion<BundledTheme, string>)[]",
          "docs": "Theme registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 91,
          "length": 6,
          "target": "themes",
          "line": 3,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.langs: (LanguageInput | SpecialLanguage | StringLiteralUnion<BundledLanguage, string>)[]",
          "docs": "Language registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 117,
          "length": 5,
          "target": "langs",
          "line": 4,
          "character": 2
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 136,
          "length": 11,
          "target": "highlighter",
          "line": 7,
          "character": 0
        },
        {
          "type": "hover",
          "text": "(property) HighlighterGeneric<BundledLanguage, BundledTheme>.codeToHtml: (code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>) => string",
          "docs": "Get highlighted code in HTML string",
          "start": 148,
          "length": 10,
          "target": "codeToHtml",
          "line": 7,
          "character": 12
        },
        {
          "type": "hover",
          "text": "(property) lang: \"javascript\"",
          "start": 181,
          "length": 4,
          "target": "lang",
          "line": 9,
          "character": 4
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsSingleTheme<BundledTheme>.theme: ThemeRegistrationAny | StringLiteralUnion<BundledTheme, string>",
          "start": 201,
          "length": 5,
          "target": "theme",
          "line": 9,
          "character": 24
        },
        {
          "type": "tag",
          "name": "error",
          "start": 225,
          "length": 0,
          "text": "Throw error, `javascript` is not loaded",
          "line": 11,
          "character": 0
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 232,
          "length": 11,
          "target": "highlighter",
          "line": 12,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(property) ShikiInternal<BundledLanguage, BundledTheme>.loadLanguage: (...langs: (BundledLanguage | LanguageInput | SpecialLanguage)[]) => Promise<void>",
          "docs": "Load a language to the highlighter, so later it can be used synchronously.",
          "start": 244,
          "length": 12,
          "target": "loadLanguage",
          "line": 12,
          "character": 18
        }
      ],
      "code": "import { createHighlighter } from 'shiki'\n\nconst highlighter = await createHighlighter({\n  themes: ['slack-dark'],\n  langs: ['css']\n})\n\nhighlighter.codeToHtml(\n  'const a = 1',\n  { lang: 'javascript', theme: 'slack-dark' }\n)\n\nawait highlighter.loadLanguage('javascript') // load the language\n\n// now it works",
      "meta": {
        "extension": "ts"
      }
    },
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:5358d50bf450d6304a6ccb225c213fec4ca7ca6d41428b8e058a1dac067b72d9": {
      "nodes": [
        {
          "type": "hover",
          "text": "(alias) const bundledLanguages: Record<BundledLanguage, DynamicImportLanguageRegistration>\nimport bundledLanguages",
          "start": 9,
          "length": 16,
          "target": "bundledLanguages",
          "line": 0,
          "character": 9
        },
        {
          "type": "hover",
          "text": "(alias) const bundledThemes: Record<BundledTheme, DynamicImportThemeRegistration>\nimport bundledThemes",
          "start": 27,
          "length": 13,
          "target": "bundledThemes",
          "line": 0,
          "character": 27
        },
        {
          "type": "hover",
          "text": "(alias) const createHighlighter: CreateHighlighterFactory<BundledLanguage, BundledTheme>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 42,
          "length": 17,
          "target": "createHighlighter",
          "line": 0,
          "character": 42
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 82,
          "length": 11,
          "target": "highlighter",
          "line": 2,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(alias) createHighlighter(options: BundledHighlighterOptions<BundledLanguage, BundledTheme>): Promise<HighlighterGeneric<BundledLanguage, BundledTheme>>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 102,
          "length": 17,
          "target": "createHighlighter",
          "line": 2,
          "character": 26
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.themes: (ThemeInput | \"none\" | StringLiteralUnion<BundledTheme, string>)[]",
          "docs": "Theme registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 124,
          "length": 6,
          "target": "themes",
          "line": 3,
          "character": 2
        },
        {
          "type": "hover",
          "text": "var Object: ObjectConstructor",
          "docs": "Provides functionality common to all JavaScript objects.",
          "start": 132,
          "length": 6,
          "target": "Object",
          "line": 3,
          "character": 10
        },
        {
          "type": "hover",
          "text": "(method) ObjectConstructor.keys(o: {}): string[] (+1 overload)",
          "docs": "Returns the names of the enumerable string properties and methods of an object.",
          "tags": [
            [
              "param",
              "o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object."
            ]
          ],
          "start": 139,
          "length": 4,
          "target": "keys",
          "line": 3,
          "character": 17
        },
        {
          "type": "hover",
          "text": "(alias) const bundledThemes: Record<BundledTheme, DynamicImportThemeRegistration>\nimport bundledThemes",
          "start": 144,
          "length": 13,
          "target": "bundledThemes",
          "line": 3,
          "character": 22
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.langs: (LanguageInput | SpecialLanguage | StringLiteralUnion<BundledLanguage, string>)[]",
          "docs": "Language registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 162,
          "length": 5,
          "target": "langs",
          "line": 4,
          "character": 2
        },
        {
          "type": "hover",
          "text": "var Object: ObjectConstructor",
          "docs": "Provides functionality common to all JavaScript objects.",
          "start": 169,
          "length": 6,
          "target": "Object",
          "line": 4,
          "character": 9
        },
        {
          "type": "hover",
          "text": "(method) ObjectConstructor.keys(o: {}): string[] (+1 overload)",
          "docs": "Returns the names of the enumerable string properties and methods of an object.",
          "tags": [
            [
              "param",
              "o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object."
            ]
          ],
          "start": 176,
          "length": 4,
          "target": "keys",
          "line": 4,
          "character": 16
        },
        {
          "type": "hover",
          "text": "(alias) const bundledLanguages: Record<BundledLanguage, DynamicImportLanguageRegistration>\nimport bundledLanguages",
          "start": 181,
          "length": 16,
          "target": "bundledLanguages",
          "line": 4,
          "character": 21
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 204,
          "length": 11,
          "target": "highlighter",
          "line": 7,
          "character": 0
        },
        {
          "type": "hover",
          "text": "(property) HighlighterGeneric<BundledLanguage, BundledTheme>.codeToHtml: (code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>) => string",
          "docs": "Get highlighted code in HTML string",
          "start": 216,
          "length": 10,
          "target": "codeToHtml",
          "line": 7,
          "character": 12
        },
        {
          "type": "hover",
          "text": "(property) lang: \"javascript\"",
          "start": 246,
          "length": 4,
          "target": "lang",
          "line": 8,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsSingleTheme<BundledTheme>.theme: ThemeRegistrationAny | StringLiteralUnion<BundledTheme, string>",
          "start": 268,
          "length": 5,
          "target": "theme",
          "line": 9,
          "character": 2
        }
      ],
      "code": "import { bundledLanguages, bundledThemes, createHighlighter } from 'shiki'\n\nconst highlighter = await createHighlighter({\n  themes: Object.keys(bundledThemes),\n  langs: Object.keys(bundledLanguages),\n})\n\nhighlighter.codeToHtml('const a = 1', {\n  lang: 'javascript',\n  theme: 'poimandres'\n})",
      "meta": {
        "extension": "ts"
      }
    },
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:2fbd63c7ed24f7fbf77e90bf408e348aac040b18d61e152fbaf54a7b0a3723eb": {
      "nodes": [
        {
          "type": "hover",
          "text": "(alias) const createHighlighter: CreateHighlighterFactory<BundledLanguage, BundledTheme>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 16,
          "length": 17,
          "target": "createHighlighter",
          "line": 1,
          "character": 9
        },
        {
          "type": "hover",
          "text": "function main(): Promise<void>",
          "start": 65,
          "length": 4,
          "target": "main",
          "line": 3,
          "character": 15
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 82,
          "length": 11,
          "target": "highlighter",
          "line": 4,
          "character": 8
        },
        {
          "type": "hover",
          "text": "(alias) createHighlighter(options: BundledHighlighterOptions<BundledLanguage, BundledTheme>): Promise<HighlighterGeneric<BundledLanguage, BundledTheme>>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 102,
          "length": 17,
          "target": "createHighlighter",
          "line": 4,
          "character": 28
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.themes: (ThemeInput | \"none\" | StringLiteralUnion<BundledTheme, string>)[]",
          "docs": "Theme registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 126,
          "length": 6,
          "target": "themes",
          "line": 5,
          "character": 4
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.langs: (LanguageInput | SpecialLanguage | StringLiteralUnion<BundledLanguage, string>)[]",
          "docs": "Language registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 156,
          "length": 5,
          "target": "langs",
          "line": 6,
          "character": 4
        },
        {
          "type": "hover",
          "text": "const code: string",
          "start": 193,
          "length": 4,
          "target": "code",
          "line": 9,
          "character": 8
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 200,
          "length": 11,
          "target": "highlighter",
          "line": 9,
          "character": 15
        },
        {
          "type": "hover",
          "text": "(property) HighlighterGeneric<BundledLanguage, BundledTheme>.codeToHtml: (code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>) => string",
          "docs": "Get highlighted code in HTML string",
          "start": 212,
          "length": 10,
          "target": "codeToHtml",
          "line": 9,
          "character": 27
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsSingleTheme<BundledTheme>.theme: ThemeRegistrationAny | StringLiteralUnion<BundledTheme, string>",
          "start": 244,
          "length": 5,
          "target": "theme",
          "line": 10,
          "character": 4
        },
        {
          "type": "hover",
          "text": "(property) lang: \"javascript\"",
          "start": 271,
          "length": 4,
          "target": "lang",
          "line": 11,
          "character": 4
        }
      ],
      "code": "// ESM\nimport { createHighlighter } from 'shiki'\n\nasync function main() {\n  const highlighter = await createHighlighter({\n    themes: ['vitesse-dark'],\n    langs: ['javascript'],\n  })\n\n  const code = highlighter.codeToHtml('const a = 1', {\n    theme: 'vitesse-dark',\n    lang: 'javascript',\n  })\n}",
      "meta": {
        "extension": "ts"
      }
    },
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:9c54c6f21430ac08ce0cba56d83b4ab2ab8edf651eb059aaa3b87c93c5943c45": {
      "nodes": [
        {
          "type": "hover",
          "text": "function main(): Promise<void>",
          "start": 22,
          "length": 4,
          "target": "main",
          "line": 1,
          "character": 15
        },
        {
          "type": "hover",
          "text": "const createHighlighter: CreateHighlighterFactory<BundledLanguage, BundledTheme>",
          "start": 41,
          "length": 17,
          "target": "createHighlighter",
          "line": 2,
          "character": 10
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 94,
          "length": 11,
          "target": "highlighter",
          "line": 4,
          "character": 8
        },
        {
          "type": "hover",
          "text": "const createHighlighter: (options: BundledHighlighterOptions<BundledLanguage, BundledTheme>) => Promise<HighlighterGeneric<BundledLanguage, BundledTheme>>",
          "start": 114,
          "length": 17,
          "target": "createHighlighter",
          "line": 4,
          "character": 28
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.themes: (ThemeInput | \"none\" | StringLiteralUnion<BundledTheme, string>)[]",
          "docs": "Theme registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 138,
          "length": 6,
          "target": "themes",
          "line": 5,
          "character": 4
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.langs: (LanguageInput | SpecialLanguage | StringLiteralUnion<BundledLanguage, string>)[]",
          "docs": "Language registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 168,
          "length": 5,
          "target": "langs",
          "line": 6,
          "character": 4
        },
        {
          "type": "hover",
          "text": "const code: string",
          "start": 205,
          "length": 4,
          "target": "code",
          "line": 9,
          "character": 8
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 212,
          "length": 11,
          "target": "highlighter",
          "line": 9,
          "character": 15
        },
        {
          "type": "hover",
          "text": "(property) HighlighterGeneric<BundledLanguage, BundledTheme>.codeToHtml: (code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>) => string",
          "docs": "Get highlighted code in HTML string",
          "start": 224,
          "length": 10,
          "target": "codeToHtml",
          "line": 9,
          "character": 27
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsSingleTheme<BundledTheme>.theme: ThemeRegistrationAny | StringLiteralUnion<BundledTheme, string>",
          "start": 256,
          "length": 5,
          "target": "theme",
          "line": 10,
          "character": 4
        },
        {
          "type": "hover",
          "text": "(property) lang: \"javascript\"",
          "start": 283,
          "length": 4,
          "target": "lang",
          "line": 11,
          "character": 4
        }
      ],
      "code": "// CJS\nasync function main() {\n  const { createHighlighter } = await import('shiki')\n\n  const highlighter = await createHighlighter({\n    themes: ['vitesse-dark'],\n    langs: ['javascript'],\n  })\n\n  const code = highlighter.codeToHtml('const a = 1', {\n    theme: 'vitesse-dark',\n    lang: 'javascript'\n  })\n}",
      "meta": {
        "extension": "ts"
      }
    },
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:491559d10e32447f2c19530476f911698e399821dfdb8de6c111730f61abf02c": {
      "nodes": [
        {
          "type": "hover",
          "text": "(alias) const js: LanguageRegistration[]\nimport js",
          "start": 7,
          "length": 2,
          "target": "js",
          "line": 0,
          "character": 7
        },
        {
          "type": "hover",
          "text": "(alias) const nord: ThemeRegistration\nimport nord",
          "start": 50,
          "length": 4,
          "target": "nord",
          "line": 1,
          "character": 7
        },
        {
          "type": "hover",
          "text": "(alias) function createHighlighterCore(options: HighlighterCoreOptions<false>): Promise<HighlighterCore>\nimport createHighlighterCore",
          "docs": "Create a Shiki core highlighter instance, with no languages or themes bundled.\nWasm and each language and theme must be loaded manually.",
          "tags": [
            [
              "see",
              "http://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 92,
          "length": 21,
          "target": "createHighlighterCore",
          "line": 2,
          "character": 9
        },
        {
          "type": "hover",
          "text": "import loadWasm",
          "start": 115,
          "length": 8,
          "target": "loadWasm",
          "line": 2,
          "character": 32
        },
        {
          "type": "hover",
          "text": "import loadWasm",
          "start": 176,
          "length": 8,
          "target": "loadWasm",
          "line": 5,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(method) fetch(): Promise<Response>",
          "start": 238,
          "length": 5,
          "target": "fetch",
          "line": 8,
          "character": 8
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterCore",
          "start": 258,
          "length": 11,
          "target": "highlighter",
          "line": 9,
          "character": 10
        },
        {
          "type": "hover",
          "text": "(alias) createHighlighterCore(options: HighlighterCoreOptions<false>): Promise<HighlighterCore>\nimport createHighlighterCore",
          "docs": "Create a Shiki core highlighter instance, with no languages or themes bundled.\nWasm and each language and theme must be loaded manually.",
          "tags": [
            [
              "see",
              "http://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 278,
          "length": 21,
          "target": "createHighlighterCore",
          "line": 9,
          "character": 30
        },
        {
          "type": "hover",
          "text": "(property) HighlighterCoreOptions<false>.themes?: ThemeInput[] | undefined",
          "docs": "Theme names, or theme registration objects to be loaded upfront.",
          "start": 308,
          "length": 6,
          "target": "themes",
          "line": 10,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(alias) const nord: ThemeRegistration\nimport nord",
          "start": 317,
          "length": 4,
          "target": "nord",
          "line": 10,
          "character": 15
        },
        {
          "type": "hover",
          "text": "(property) HighlighterCoreOptions<false>.langs?: LanguageInput[] | undefined",
          "docs": "Language names, or language registration objects to be loaded upfront.",
          "start": 330,
          "length": 5,
          "target": "langs",
          "line": 11,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(alias) const js: LanguageRegistration[]\nimport js",
          "start": 338,
          "length": 2,
          "target": "js",
          "line": 11,
          "character": 14
        },
        {
          "type": "hover",
          "text": "var Response: new (body?: BodyInit | null, init?: ResponseInit) => Response",
          "docs": "The **`Response`** interface of the Fetch API represents the response to a request.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Response)",
          "start": 366,
          "length": 8,
          "target": "Response",
          "line": 14,
          "character": 15
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterCore",
          "start": 375,
          "length": 11,
          "target": "highlighter",
          "line": 14,
          "character": 24
        },
        {
          "type": "hover",
          "text": "(property) HighlighterGeneric<never, never>.codeToHtml: (code: string, options: CodeToHastOptions<string, string>) => string",
          "docs": "Get highlighted code in HTML string",
          "start": 387,
          "length": 10,
          "target": "codeToHtml",
          "line": 14,
          "character": 36
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsSingleTheme<string>.theme: ThemeRegistrationAny | StringLiteralUnion<string, string>",
          "start": 433,
          "length": 5,
          "target": "theme",
          "line": 15,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(property) lang: string",
          "start": 454,
          "length": 4,
          "target": "lang",
          "line": 16,
          "character": 6
        }
      ],
      "code": "import js from '@shikijs/langs/javascript'\nimport nord from '@shikijs/themes/nord'\nimport { createHighlighterCore, loadWasm } from 'shiki/core'\n\n// import wasm as assets\nawait loadWasm(import('shiki/onig.wasm'))\n\nexport default {\n  async fetch() {\n    const highlighter = await createHighlighterCore({\n      themes: [nord],\n      langs: [js],\n    })\n\n    return new Response(highlighter.codeToHtml('console.log(\\'shiki\\');', {\n      theme: 'nord',\n      lang: 'js'\n    }))\n  },\n}",
      "meta": {
        "extension": "ts"
      }
    }
  }
}