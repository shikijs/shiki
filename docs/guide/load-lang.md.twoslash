{
  "version": 1,
  "fileHash": "a04a3f27146081508697047021c86e2698fba311c6bd95699e74e1b9b0c9b1b7",
  "cache": {
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:6cb2d7e0690252c94e2b1b09915080bcf299531bf55ff88ab87fc7f379e74056": {
      "nodes": [
        {
          "type": "hover",
          "text": "(alias) const createHighlighter: CreateHighlighterFactory<BundledLanguage, BundledTheme>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 9,
          "length": 17,
          "target": "createHighlighter",
          "line": 0,
          "character": 9
        },
        {
          "type": "hover",
          "text": "const myLang: any",
          "start": 49,
          "length": 6,
          "target": "myLang",
          "line": 2,
          "character": 6
        },
        {
          "type": "hover",
          "text": "var JSON: JSON",
          "docs": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
          "start": 58,
          "length": 4,
          "target": "JSON",
          "line": 2,
          "character": 15
        },
        {
          "type": "hover",
          "text": "(method) JSON.parse(text: string, reviver?: (this: any, key: string, value: any) => any): any",
          "docs": "Converts a JavaScript Object Notation (JSON) string into an object.",
          "tags": [
            [
              "param",
              "text A valid JSON string."
            ],
            [
              "param",
              "reviver A function that transforms the results. This function is called for each member of the object.\nIf a member contains nested objects, the nested objects are transformed before the parent object is."
            ],
            [
              "throws",
              "{SyntaxError} If `text` is not valid JSON."
            ]
          ],
          "start": 63,
          "length": 5,
          "target": "parse",
          "line": 2,
          "character": 20
        },
        {
          "type": "hover",
          "text": "any",
          "start": 69,
          "length": 2,
          "target": "fs",
          "line": 2,
          "character": 26
        },
        {
          "type": "hover",
          "text": "any",
          "start": 72,
          "length": 12,
          "target": "readFileSync",
          "line": 2,
          "character": 29
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 117,
          "length": 11,
          "target": "highlighter",
          "line": 4,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(alias) createHighlighter(options: BundledHighlighterOptions<BundledLanguage, BundledTheme>): Promise<HighlighterGeneric<BundledLanguage, BundledTheme>>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 137,
          "length": 17,
          "target": "createHighlighter",
          "line": 4,
          "character": 26
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.langs: (LanguageInput | SpecialLanguage | StringLiteralUnion<BundledLanguage, string>)[]",
          "docs": "Language registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 159,
          "length": 5,
          "target": "langs",
          "line": 5,
          "character": 2
        },
        {
          "type": "hover",
          "text": "const myLang: any",
          "start": 167,
          "length": 6,
          "target": "myLang",
          "line": 5,
          "character": 10
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.themes: (ThemeInput | \"none\" | StringLiteralUnion<BundledTheme, string>)[]",
          "docs": "Theme registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 178,
          "length": 6,
          "target": "themes",
          "line": 6,
          "character": 2
        },
        {
          "type": "hover",
          "text": "const html: string",
          "start": 214,
          "length": 4,
          "target": "html",
          "line": 9,
          "character": 6
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 221,
          "length": 11,
          "target": "highlighter",
          "line": 9,
          "character": 13
        },
        {
          "type": "hover",
          "text": "(property) HighlighterGeneric<BundledLanguage, BundledTheme>.codeToHtml: (code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>) => string",
          "docs": "Get highlighted code in HTML string",
          "start": 233,
          "length": 10,
          "target": "codeToHtml",
          "line": 9,
          "character": 25
        },
        {
          "type": "hover",
          "text": "any",
          "start": 244,
          "length": 4,
          "target": "code",
          "line": 9,
          "character": 36
        },
        {
          "type": "hover",
          "text": "(property) lang: \"my-lang\"",
          "start": 254,
          "length": 4,
          "target": "lang",
          "line": 10,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsSingleTheme<BundledTheme>.theme: ThemeRegistrationAny | StringLiteralUnion<BundledTheme, string>",
          "start": 273,
          "length": 5,
          "target": "theme",
          "line": 11,
          "character": 2
        }
      ],
      "code": "import { createHighlighter } from 'shiki'\n\nconst myLang = JSON.parse(fs.readFileSync('my-lang.json', 'utf8'))\n\nconst highlighter = await createHighlighter({\n  langs: [myLang],\n  themes: ['vitesse-light']\n})\n\nconst html = highlighter.codeToHtml(code, {\n  lang: 'my-lang',\n  theme: 'vitesse-light'\n})",
      "meta": {
        "extension": "ts"
      }
    },
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:e32eeef052132e181a1e9a1e4f53a359d5b62eba0d296b0c93504e4541a7843e": {
      "nodes": [
        {
          "type": "hover",
          "text": "(alias) const createHighlighter: CreateHighlighterFactory<BundledLanguage, BundledTheme>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 9,
          "length": 17,
          "target": "createHighlighter",
          "line": 0,
          "character": 9
        },
        {
          "type": "hover",
          "text": "const myLang: any",
          "start": 49,
          "length": 6,
          "target": "myLang",
          "line": 2,
          "character": 6
        },
        {
          "type": "hover",
          "text": "var JSON: JSON",
          "docs": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
          "start": 58,
          "length": 4,
          "target": "JSON",
          "line": 2,
          "character": 15
        },
        {
          "type": "hover",
          "text": "(method) JSON.parse(text: string, reviver?: (this: any, key: string, value: any) => any): any",
          "docs": "Converts a JavaScript Object Notation (JSON) string into an object.",
          "tags": [
            [
              "param",
              "text A valid JSON string."
            ],
            [
              "param",
              "reviver A function that transforms the results. This function is called for each member of the object.\nIf a member contains nested objects, the nested objects are transformed before the parent object is."
            ],
            [
              "throws",
              "{SyntaxError} If `text` is not valid JSON."
            ]
          ],
          "start": 63,
          "length": 5,
          "target": "parse",
          "line": 2,
          "character": 20
        },
        {
          "type": "hover",
          "text": "any",
          "start": 69,
          "length": 2,
          "target": "fs",
          "line": 2,
          "character": 26
        },
        {
          "type": "hover",
          "text": "any",
          "start": 72,
          "length": 12,
          "target": "readFileSync",
          "line": 2,
          "character": 29
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 117,
          "length": 11,
          "target": "highlighter",
          "line": 4,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(alias) createHighlighter(options: BundledHighlighterOptions<BundledLanguage, BundledTheme>): Promise<HighlighterGeneric<BundledLanguage, BundledTheme>>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 137,
          "length": 17,
          "target": "createHighlighter",
          "line": 4,
          "character": 26
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.langs: (LanguageInput | SpecialLanguage | StringLiteralUnion<BundledLanguage, string>)[]",
          "docs": "Language registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 159,
          "length": 5,
          "target": "langs",
          "line": 5,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.themes: (ThemeInput | \"none\" | StringLiteralUnion<BundledTheme, string>)[]",
          "docs": "Theme registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 172,
          "length": 6,
          "target": "themes",
          "line": 6,
          "character": 2
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 209,
          "length": 11,
          "target": "highlighter",
          "line": 9,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(property) ShikiInternal<BundledLanguage, BundledTheme>.loadLanguage: (...langs: (BundledLanguage | LanguageInput | SpecialLanguage)[]) => Promise<void>",
          "docs": "Load a language to the highlighter, so later it can be used synchronously.",
          "start": 221,
          "length": 12,
          "target": "loadLanguage",
          "line": 9,
          "character": 18
        },
        {
          "type": "hover",
          "text": "const myLang: any",
          "start": 234,
          "length": 6,
          "target": "myLang",
          "line": 9,
          "character": 31
        },
        {
          "type": "hover",
          "text": "const html: string",
          "start": 256,
          "length": 4,
          "target": "html",
          "line": 11,
          "character": 6
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 263,
          "length": 11,
          "target": "highlighter",
          "line": 11,
          "character": 13
        },
        {
          "type": "hover",
          "text": "(property) HighlighterGeneric<BundledLanguage, BundledTheme>.codeToHtml: (code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>) => string",
          "docs": "Get highlighted code in HTML string",
          "start": 275,
          "length": 10,
          "target": "codeToHtml",
          "line": 11,
          "character": 25
        },
        {
          "type": "hover",
          "text": "any",
          "start": 286,
          "length": 4,
          "target": "code",
          "line": 11,
          "character": 36
        },
        {
          "type": "hover",
          "text": "(property) lang: \"my-lang\"",
          "start": 296,
          "length": 4,
          "target": "lang",
          "line": 12,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsSingleTheme<BundledTheme>.theme: ThemeRegistrationAny | StringLiteralUnion<BundledTheme, string>",
          "start": 315,
          "length": 5,
          "target": "theme",
          "line": 13,
          "character": 2
        }
      ],
      "code": "import { createHighlighter } from 'shiki'\n\nconst myLang = JSON.parse(fs.readFileSync('my-lang.json', 'utf8'))\n\nconst highlighter = await createHighlighter({\n  langs: [],\n  themes: ['vitesse-light'],\n})\n\nawait highlighter.loadLanguage(myLang) // <--\n\nconst html = highlighter.codeToHtml(code, {\n  lang: 'my-lang',\n  theme: 'vitesse-light'\n})",
      "meta": {
        "extension": "ts"
      }
    },
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:cb485e26d47ffdafb72197e04c6fdff7183dbb501d5ad9776541c458a5c5e46b": {
      "nodes": [
        {
          "type": "hover",
          "text": "(alias) const createHighlighter: CreateHighlighterFactory<BundledLanguage, BundledTheme>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 9,
          "length": 17,
          "target": "createHighlighter",
          "line": 0,
          "character": 9
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 49,
          "length": 11,
          "target": "highlighter",
          "line": 2,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(alias) createHighlighter(options: BundledHighlighterOptions<BundledLanguage, BundledTheme>): Promise<HighlighterGeneric<BundledLanguage, BundledTheme>>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 69,
          "length": 17,
          "target": "createHighlighter",
          "line": 2,
          "character": 26
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.langs: (LanguageInput | SpecialLanguage | StringLiteralUnion<BundledLanguage, string>)[]",
          "docs": "Language registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 91,
          "length": 5,
          "target": "langs",
          "line": 3,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.langAlias?: Record<string, StringLiteralUnion<BundledLanguage, string>> | undefined",
          "docs": "Alias of languages",
          "tags": [
            [
              "example",
              "{ 'my-lang': 'javascript' }"
            ]
          ],
          "start": 116,
          "length": 9,
          "target": "langAlias",
          "line": 4,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) mylang: \"javascript\"",
          "start": 149,
          "length": 6,
          "target": "mylang",
          "line": 5,
          "character": 4
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.themes: (ThemeInput | \"none\" | StringLiteralUnion<BundledTheme, string>)[]",
          "docs": "Theme registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 178,
          "length": 6,
          "target": "themes",
          "line": 7,
          "character": 2
        },
        {
          "type": "hover",
          "text": "const code: string",
          "start": 205,
          "length": 4,
          "target": "code",
          "line": 10,
          "character": 6
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 212,
          "length": 11,
          "target": "highlighter",
          "line": 10,
          "character": 13
        },
        {
          "type": "hover",
          "text": "(property) HighlighterGeneric<BundledLanguage, BundledTheme>.codeToHtml: (code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>) => string",
          "docs": "Get highlighted code in HTML string",
          "start": 224,
          "length": 10,
          "target": "codeToHtml",
          "line": 10,
          "character": 25
        },
        {
          "type": "hover",
          "text": "(property) lang: \"mylang\"",
          "start": 254,
          "length": 4,
          "target": "lang",
          "line": 11,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsSingleTheme<BundledTheme>.theme: ThemeRegistrationAny | StringLiteralUnion<BundledTheme, string>",
          "start": 286,
          "length": 5,
          "target": "theme",
          "line": 12,
          "character": 2
        }
      ],
      "code": "import { createHighlighter } from 'shiki'\n\nconst highlighter = await createHighlighter({\n  langs: ['javascript'],\n  langAlias: { // [!code hl:3]\n    mylang: 'javascript',\n  },\n  themes: ['nord']\n})\n\nconst code = highlighter.codeToHtml('const a = 1', {\n  lang: 'mylang', // [!code hl]\n  theme: 'nord'\n})",
      "meta": {
        "extension": "ts"
      }
    }
  }
}