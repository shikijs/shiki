{
  "version": 1,
  "fileHash": "8328ee5174d2d1b9db7d1eb8c1ede554c59f78bf1466c9cf2c62f498fec5dd46",
  "cache": {
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:cf4c4a9d01618a09a7563076a0fdf416369478b0e3184105802ef3678a4757d3": {
      "nodes": [
        {
          "type": "hover",
          "text": "(alias) const createHighlighter: CreateHighlighterFactory<BundledLanguage, BundledTheme>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 9,
          "length": 17,
          "target": "createHighlighter",
          "line": 0,
          "character": 9
        },
        {
          "type": "hover",
          "text": "const myTheme: {\n    name: string;\n    settings: {\n        scope: string[];\n        settings: {\n            foreground: string;\n        };\n    }[];\n}",
          "start": 49,
          "length": 7,
          "target": "myTheme",
          "line": 2,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(property) name: string",
          "start": 63,
          "length": 4,
          "target": "name",
          "line": 3,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) settings: {\n    scope: string[];\n    settings: {\n        foreground: string;\n    };\n}[]",
          "start": 83,
          "length": 8,
          "target": "settings",
          "line": 4,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) scope: string[]",
          "start": 107,
          "length": 5,
          "target": "scope",
          "line": 6,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(property) settings: {\n    foreground: string;\n}",
          "start": 133,
          "length": 8,
          "target": "settings",
          "line": 7,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(property) foreground: string",
          "start": 153,
          "length": 10,
          "target": "foreground",
          "line": 8,
          "character": 8
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 211,
          "length": 11,
          "target": "highlighter",
          "line": 15,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(alias) createHighlighter(options: BundledHighlighterOptions<BundledLanguage, BundledTheme>): Promise<HighlighterGeneric<BundledLanguage, BundledTheme>>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 231,
          "length": 17,
          "target": "createHighlighter",
          "line": 15,
          "character": 26
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.themes: (ThemeInput | \"none\" | StringLiteralUnion<BundledTheme, string>)[]",
          "docs": "Theme registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 253,
          "length": 6,
          "target": "themes",
          "line": 16,
          "character": 2
        },
        {
          "type": "hover",
          "text": "const myTheme: {\n    name: string;\n    settings: {\n        scope: string[];\n        settings: {\n            foreground: string;\n        };\n    }[];\n}",
          "start": 262,
          "length": 7,
          "target": "myTheme",
          "line": 16,
          "character": 11
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.langs: (LanguageInput | SpecialLanguage | StringLiteralUnion<BundledLanguage, string>)[]",
          "docs": "Language registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 274,
          "length": 5,
          "target": "langs",
          "line": 17,
          "character": 2
        },
        {
          "type": "hover",
          "text": "const code: \"console.log('hello')\"",
          "start": 295,
          "length": 4,
          "target": "code",
          "line": 20,
          "character": 6
        },
        {
          "type": "hover",
          "text": "const html: string",
          "start": 331,
          "length": 4,
          "target": "html",
          "line": 21,
          "character": 6
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 338,
          "length": 11,
          "target": "highlighter",
          "line": 21,
          "character": 13
        },
        {
          "type": "hover",
          "text": "(property) HighlighterGeneric<BundledLanguage, BundledTheme>.codeToHtml: (code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>) => string",
          "docs": "Get highlighted code in HTML string",
          "start": 350,
          "length": 10,
          "target": "codeToHtml",
          "line": 21,
          "character": 25
        },
        {
          "type": "hover",
          "text": "const code: \"console.log('hello')\"",
          "start": 361,
          "length": 4,
          "target": "code",
          "line": 21,
          "character": 36
        },
        {
          "type": "hover",
          "text": "(property) lang: \"javascript\"",
          "start": 371,
          "length": 4,
          "target": "lang",
          "line": 22,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsSingleTheme<BundledTheme>.theme: ThemeRegistrationAny | StringLiteralUnion<BundledTheme, string>",
          "start": 393,
          "length": 5,
          "target": "theme",
          "line": 23,
          "character": 2
        }
      ],
      "code": "import { createHighlighter } from 'shiki'\n\nconst myTheme = {\n  name: 'my-theme',\n  settings: [\n    {\n      scope: ['comment'],\n      settings: {\n        foreground: '#888'\n      }\n    },\n    // ...\n  ]\n}\n\nconst highlighter = await createHighlighter({\n  themes: [myTheme],\n  langs: [],\n})\n\nconst code = `console.log('hello')`\nconst html = highlighter.codeToHtml(code, {\n  lang: 'javascript',\n  theme: 'my-theme'\n})",
      "meta": {
        "extension": "ts"
      }
    },
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:3308aadb5a988c6612718412f8dbd35b14152d865e475b905383eddc24f65eb3": {
      "nodes": [
        {
          "type": "hover",
          "text": "(alias) const createHighlighter: CreateHighlighterFactory<BundledLanguage, BundledTheme>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 9,
          "length": 17,
          "target": "createHighlighter",
          "line": 0,
          "character": 9
        },
        {
          "type": "hover",
          "text": "const myTheme: any",
          "start": 118,
          "length": 7,
          "target": "myTheme",
          "line": 3,
          "character": 6
        },
        {
          "type": "hover",
          "text": "var JSON: JSON",
          "docs": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
          "start": 128,
          "length": 4,
          "target": "JSON",
          "line": 3,
          "character": 16
        },
        {
          "type": "hover",
          "text": "(method) JSON.parse(text: string, reviver?: (this: any, key: string, value: any) => any): any",
          "docs": "Converts a JavaScript Object Notation (JSON) string into an object.",
          "tags": [
            [
              "param",
              "text A valid JSON string."
            ],
            [
              "param",
              "reviver A function that transforms the results. This function is called for each member of the object.\nIf a member contains nested objects, the nested objects are transformed before the parent object is."
            ],
            [
              "throws",
              "{SyntaxError} If `text` is not valid JSON."
            ]
          ],
          "start": 133,
          "length": 5,
          "target": "parse",
          "line": 3,
          "character": 21
        },
        {
          "type": "hover",
          "text": "any",
          "start": 139,
          "length": 2,
          "target": "fs",
          "line": 3,
          "character": 27
        },
        {
          "type": "hover",
          "text": "any",
          "start": 142,
          "length": 12,
          "target": "readFileSync",
          "line": 3,
          "character": 30
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 188,
          "length": 11,
          "target": "highlighter",
          "line": 5,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(alias) createHighlighter(options: BundledHighlighterOptions<BundledLanguage, BundledTheme>): Promise<HighlighterGeneric<BundledLanguage, BundledTheme>>\nimport createHighlighter",
          "docs": "Initiate a highlighter instance and load the specified languages and themes.\nLater it can be used synchronously to highlight code.\n\nImporting this function will bundle all languages and themes.",
          "tags": [
            [
              "see",
              "https://shiki.style/guide/bundles#shiki-bundle-full\n\nFor granular control over the bundle, check:"
            ],
            [
              "see",
              "https://shiki.style/guide/bundles#fine-grained-bundle"
            ]
          ],
          "start": 208,
          "length": 17,
          "target": "createHighlighter",
          "line": 5,
          "character": 26
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.langs: (LanguageInput | SpecialLanguage | StringLiteralUnion<BundledLanguage, string>)[]",
          "docs": "Language registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 230,
          "length": 5,
          "target": "langs",
          "line": 6,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) BundledHighlighterOptions<BundledLanguage, BundledTheme>.themes: (ThemeInput | \"none\" | StringLiteralUnion<BundledTheme, string>)[]",
          "docs": "Theme registation",
          "tags": [
            [
              "default",
              "[]"
            ]
          ],
          "start": 255,
          "length": 6,
          "target": "themes",
          "line": 7,
          "character": 2
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 277,
          "length": 11,
          "target": "highlighter",
          "line": 10,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(property) ShikiInternal<BundledLanguage, BundledTheme>.loadTheme: (...themes: (BundledTheme | ThemeInput | \"none\")[]) => Promise<void>",
          "docs": "Load a theme to the highlighter, so later it can be used synchronously.",
          "start": 289,
          "length": 9,
          "target": "loadTheme",
          "line": 10,
          "character": 18
        },
        {
          "type": "hover",
          "text": "const myTheme: any",
          "start": 299,
          "length": 7,
          "target": "myTheme",
          "line": 10,
          "character": 28
        },
        {
          "type": "hover",
          "text": "const code: \"console.log('hello')\"",
          "start": 322,
          "length": 4,
          "target": "code",
          "line": 12,
          "character": 6
        },
        {
          "type": "hover",
          "text": "const html: string",
          "start": 358,
          "length": 4,
          "target": "html",
          "line": 13,
          "character": 6
        },
        {
          "type": "hover",
          "text": "const highlighter: HighlighterGeneric<BundledLanguage, BundledTheme>",
          "start": 365,
          "length": 11,
          "target": "highlighter",
          "line": 13,
          "character": 13
        },
        {
          "type": "hover",
          "text": "(property) HighlighterGeneric<BundledLanguage, BundledTheme>.codeToHtml: (code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>) => string",
          "docs": "Get highlighted code in HTML string",
          "start": 377,
          "length": 10,
          "target": "codeToHtml",
          "line": 13,
          "character": 25
        },
        {
          "type": "hover",
          "text": "const code: \"console.log('hello')\"",
          "start": 388,
          "length": 4,
          "target": "code",
          "line": 13,
          "character": 36
        },
        {
          "type": "hover",
          "text": "(property) lang: \"javascript\"",
          "start": 398,
          "length": 4,
          "target": "lang",
          "line": 14,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsSingleTheme<BundledTheme>.theme: ThemeRegistrationAny | StringLiteralUnion<BundledTheme, string>",
          "start": 420,
          "length": 5,
          "target": "theme",
          "line": 15,
          "character": 2
        }
      ],
      "code": "import { createHighlighter } from 'shiki'\n\n// Load the theme object from a file, a network request, or anywhere\nconst myTheme = JSON.parse(fs.readFileSync('my-theme.json', 'utf8'))\n\nconst highlighter = await createHighlighter({\n  langs: ['javascript'],\n  themes: [],\n})\n\nawait highlighter.loadTheme(myTheme) // <--\n\nconst code = `console.log('hello')`\nconst html = highlighter.codeToHtml(code, {\n  lang: 'javascript',\n  theme: 'my-theme'\n})",
      "meta": {
        "extension": "ts"
      }
    }
  }
}