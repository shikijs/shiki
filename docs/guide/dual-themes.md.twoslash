{
  "version": 1,
  "fileHash": "65272dfdde2fa6144dd07a2dbf82080141215f475c922ec05338e8226b3f1f38",
  "cache": {
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:8629b6256462ca7e5d1e6d911bf1fcb7063dc036f40e424a848e209ed7caf4a5": {
      "nodes": [
        {
          "type": "hover",
          "text": "(alias) const codeToHtml: (code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>) => Promise<string>\nimport codeToHtml",
          "start": 9,
          "length": 10,
          "target": "codeToHtml",
          "line": 0,
          "character": 9
        },
        {
          "type": "hover",
          "text": "const code: string",
          "start": 42,
          "length": 4,
          "target": "code",
          "line": 2,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(alias) codeToHtml(code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>): Promise<string>\nimport codeToHtml",
          "start": 55,
          "length": 10,
          "target": "codeToHtml",
          "line": 2,
          "character": 19
        },
        {
          "type": "hover",
          "text": "(property) lang: \"javascript\"",
          "start": 94,
          "length": 4,
          "target": "lang",
          "line": 3,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsMultipleThemes<BundledTheme>.themes: Partial<Record<string, ThemeRegistrationAny | StringLiteralUnion<BundledTheme, string>>>",
          "docs": "A map of color names to themes.\nThis allows you to specify multiple themes for the generated code.\n\n```ts\nhighlighter.codeToHtml(code, {\n  lang: 'js',\n  themes: {\n    light: 'vitesse-light',\n    dark: 'vitesse-dark',\n  }\n})\n```\n\nWill generate:\n\n```html\n<span style=\"color:#111;--shiki-dark:#fff;\">code</span>\n```",
          "tags": [
            [
              "see",
              "https://github.com/shikijs/shiki#lightdark-dual-themes"
            ]
          ],
          "start": 116,
          "length": 6,
          "target": "themes",
          "line": 4,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) light: \"min-light\"",
          "start": 146,
          "length": 5,
          "target": "light",
          "line": 5,
          "character": 4
        },
        {
          "type": "hover",
          "text": "(property) dark: \"nord\"",
          "start": 170,
          "length": 4,
          "target": "dark",
          "line": 6,
          "character": 4
        }
      ],
      "code": "import { codeToHtml } from 'shiki'\n\nconst code = await codeToHtml('console.log(\"hello\")', {\n  lang: 'javascript',\n  themes: { // [!code hl:4]\n    light: 'min-light',\n    dark: 'nord',\n  }\n})",
      "meta": {
        "extension": "ts"
      }
    },
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:749eb01d6e0144c968c4cad0d6ba6b4d8e0a55373c52804521d9c9010f0eaf6f": {
      "nodes": [
        {
          "type": "hover",
          "text": "(alias) const codeToHtml: (code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>) => Promise<string>\nimport codeToHtml",
          "start": 9,
          "length": 10,
          "target": "codeToHtml",
          "line": 0,
          "character": 9
        },
        {
          "type": "hover",
          "text": "const code: string",
          "start": 42,
          "length": 4,
          "target": "code",
          "line": 2,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(alias) codeToHtml(code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>): Promise<string>\nimport codeToHtml",
          "start": 55,
          "length": 10,
          "target": "codeToHtml",
          "line": 2,
          "character": 19
        },
        {
          "type": "hover",
          "text": "(property) lang: \"javascript\"",
          "start": 94,
          "length": 4,
          "target": "lang",
          "line": 3,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsMultipleThemes<BundledTheme>.themes: Partial<Record<string, ThemeRegistrationAny | StringLiteralUnion<BundledTheme, string>>>",
          "docs": "A map of color names to themes.\nThis allows you to specify multiple themes for the generated code.\n\n```ts\nhighlighter.codeToHtml(code, {\n  lang: 'js',\n  themes: {\n    light: 'vitesse-light',\n    dark: 'vitesse-dark',\n  }\n})\n```\n\nWill generate:\n\n```html\n<span style=\"color:#111;--shiki-dark:#fff;\">code</span>\n```",
          "tags": [
            [
              "see",
              "https://github.com/shikijs/shiki#lightdark-dual-themes"
            ]
          ],
          "start": 116,
          "length": 6,
          "target": "themes",
          "line": 4,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) light: \"github-light\"",
          "start": 130,
          "length": 5,
          "target": "light",
          "line": 5,
          "character": 4
        },
        {
          "type": "hover",
          "text": "(property) dark: \"github-dark\"",
          "start": 157,
          "length": 4,
          "target": "dark",
          "line": 6,
          "character": 4
        },
        {
          "type": "hover",
          "text": "(property) dim: \"github-dimmed\"",
          "start": 182,
          "length": 3,
          "target": "dim",
          "line": 7,
          "character": 4
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsMultipleThemes<BundledTheme>.defaultColor?: false | StringLiteralUnion<\"light\" | \"dark\", string> | \"light-dark()\" | undefined",
          "docs": "The default theme applied to the code (via inline `color` style).\nThe rest of the themes are applied via CSS variables, and toggled by CSS overrides.\n\nFor example, if `defaultColor` is `light`, then `light` theme is applied to the code,\nand the `dark` theme and other custom themes are applied via CSS variables:\n\n```html\n<span style=\"color:#{light};--shiki-dark:#{dark};--shiki-custom:#{custom};\">code</span>\n```\n\nWhen set to `false`, no default styles will be applied, and totally up to users to apply the styles:\n\n```html\n<span style=\"--shiki-light:#{light};--shiki-dark:#{dark};--shiki-custom:#{custom};\">code</span>\n```\n\nWhen set to `light-dark()`, the default color will be rendered as `light-dark(#{light}, #{dark})`.\n\n```html\n<span style=\"color:light-dark(#{light}, #{dark});--shiki-dark:#{dark};--shiki-custom:#{custom};\">code</span>\n```",
          "tags": [
            [
              "default",
              "'light'"
            ]
          ],
          "start": 269,
          "length": 12,
          "target": "defaultColor",
          "line": 12,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsMultipleThemes<BundledTheme>.cssVariablePrefix?: string | undefined",
          "docs": "Prefix of CSS variables used to store the color of the other theme.",
          "tags": [
            [
              "default",
              "'--shiki-'"
            ]
          ],
          "start": 294,
          "length": 17,
          "target": "cssVariablePrefix",
          "line": 13,
          "character": 2
        }
      ],
      "code": "import { codeToHtml } from 'shiki'\n\nconst code = await codeToHtml('console.log(\"hello\")', {\n  lang: 'javascript',\n  themes: {\n    light: 'github-light',\n    dark: 'github-dark',\n    dim: 'github-dimmed',\n    // any number of themes\n  },\n\n  // optional customizations\n  defaultColor: 'light',\n  cssVariablePrefix: '--shiki-'\n})",
      "meta": {
        "extension": "ts"
      }
    },
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:0abc72c23359228a2614c9a0144583a2f0ec60dcb595ac33b48939dc6521428c": {
      "nodes": [
        {
          "type": "hover",
          "text": "(alias) const codeToHtml: (code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>) => Promise<string>\nimport codeToHtml",
          "start": 9,
          "length": 10,
          "target": "codeToHtml",
          "line": 0,
          "character": 9
        },
        {
          "type": "hover",
          "text": "const code: string",
          "start": 42,
          "length": 4,
          "target": "code",
          "line": 2,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(alias) codeToHtml(code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>): Promise<string>\nimport codeToHtml",
          "start": 55,
          "length": 10,
          "target": "codeToHtml",
          "line": 2,
          "character": 19
        },
        {
          "type": "hover",
          "text": "(property) lang: \"javascript\"",
          "start": 94,
          "length": 4,
          "target": "lang",
          "line": 3,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsMultipleThemes<BundledTheme>.themes: Partial<Record<string, ThemeRegistrationAny | StringLiteralUnion<BundledTheme, string>>>",
          "docs": "A map of color names to themes.\nThis allows you to specify multiple themes for the generated code.\n\n```ts\nhighlighter.codeToHtml(code, {\n  lang: 'js',\n  themes: {\n    light: 'vitesse-light',\n    dark: 'vitesse-dark',\n  }\n})\n```\n\nWill generate:\n\n```html\n<span style=\"color:#111;--shiki-dark:#fff;\">code</span>\n```",
          "tags": [
            [
              "see",
              "https://github.com/shikijs/shiki#lightdark-dual-themes"
            ]
          ],
          "start": 116,
          "length": 6,
          "target": "themes",
          "line": 4,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) light: \"vitesse-light\"",
          "start": 130,
          "length": 5,
          "target": "light",
          "line": 5,
          "character": 4
        },
        {
          "type": "hover",
          "text": "(property) dark: \"vitesse-dark\"",
          "start": 158,
          "length": 4,
          "target": "dark",
          "line": 6,
          "character": 4
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsMultipleThemes<BundledTheme>.defaultColor?: false | StringLiteralUnion<\"light\" | \"dark\", string> | \"light-dark()\" | undefined",
          "docs": "The default theme applied to the code (via inline `color` style).\nThe rest of the themes are applied via CSS variables, and toggled by CSS overrides.\n\nFor example, if `defaultColor` is `light`, then `light` theme is applied to the code,\nand the `dark` theme and other custom themes are applied via CSS variables:\n\n```html\n<span style=\"color:#{light};--shiki-dark:#{dark};--shiki-custom:#{custom};\">code</span>\n```\n\nWhen set to `false`, no default styles will be applied, and totally up to users to apply the styles:\n\n```html\n<span style=\"--shiki-light:#{light};--shiki-dark:#{dark};--shiki-custom:#{custom};\">code</span>\n```\n\nWhen set to `light-dark()`, the default color will be rendered as `light-dark(#{light}, #{dark})`.\n\n```html\n<span style=\"color:light-dark(#{light}, #{dark});--shiki-dark:#{dark};--shiki-custom:#{custom};\">code</span>\n```",
          "tags": [
            [
              "default",
              "'light'"
            ]
          ],
          "start": 187,
          "length": 12,
          "target": "defaultColor",
          "line": 8,
          "character": 2
        }
      ],
      "code": "import { codeToHtml } from 'shiki'\n\nconst code = await codeToHtml('console.log(\"hello\")', {\n  lang: 'javascript',\n  themes: {\n    light: 'vitesse-light',\n    dark: 'vitesse-dark',\n  },\n  defaultColor: false, // <--\n})",
      "meta": {
        "extension": "ts"
      }
    },
    "teojfmu_VVDND9IjD9xcgqoGUXo2btP4q2ZCFuTG5Ro:ts:ce44cfb64394f8380e6dd52f7cc29f990f4a957122130bdc5af8704e9aea2581": {
      "nodes": [
        {
          "type": "hover",
          "text": "(alias) const codeToHtml: (code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>) => Promise<string>\nimport codeToHtml",
          "start": 9,
          "length": 10,
          "target": "codeToHtml",
          "line": 0,
          "character": 9
        },
        {
          "type": "hover",
          "text": "const code: string",
          "start": 42,
          "length": 4,
          "target": "code",
          "line": 2,
          "character": 6
        },
        {
          "type": "hover",
          "text": "(alias) codeToHtml(code: string, options: CodeToHastOptions<BundledLanguage, BundledTheme>): Promise<string>\nimport codeToHtml",
          "start": 55,
          "length": 10,
          "target": "codeToHtml",
          "line": 2,
          "character": 19
        },
        {
          "type": "hover",
          "text": "(property) lang: \"javascript\"",
          "start": 94,
          "length": 4,
          "target": "lang",
          "line": 3,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsMultipleThemes<BundledTheme>.themes: Partial<Record<string, ThemeRegistrationAny | StringLiteralUnion<BundledTheme, string>>>",
          "docs": "A map of color names to themes.\nThis allows you to specify multiple themes for the generated code.\n\n```ts\nhighlighter.codeToHtml(code, {\n  lang: 'js',\n  themes: {\n    light: 'vitesse-light',\n    dark: 'vitesse-dark',\n  }\n})\n```\n\nWill generate:\n\n```html\n<span style=\"color:#111;--shiki-dark:#fff;\">code</span>\n```",
          "tags": [
            [
              "see",
              "https://github.com/shikijs/shiki#lightdark-dual-themes"
            ]
          ],
          "start": 116,
          "length": 6,
          "target": "themes",
          "line": 4,
          "character": 2
        },
        {
          "type": "hover",
          "text": "(property) light: \"min-light\"",
          "start": 130,
          "length": 5,
          "target": "light",
          "line": 5,
          "character": 4
        },
        {
          "type": "hover",
          "text": "(property) dark: \"nord\"",
          "start": 154,
          "length": 4,
          "target": "dark",
          "line": 6,
          "character": 4
        },
        {
          "type": "hover",
          "text": "(property) CodeOptionsMultipleThemes<BundledTheme>.defaultColor?: false | StringLiteralUnion<\"light\" | \"dark\", string> | \"light-dark()\" | undefined",
          "docs": "The default theme applied to the code (via inline `color` style).\nThe rest of the themes are applied via CSS variables, and toggled by CSS overrides.\n\nFor example, if `defaultColor` is `light`, then `light` theme is applied to the code,\nand the `dark` theme and other custom themes are applied via CSS variables:\n\n```html\n<span style=\"color:#{light};--shiki-dark:#{dark};--shiki-custom:#{custom};\">code</span>\n```\n\nWhen set to `false`, no default styles will be applied, and totally up to users to apply the styles:\n\n```html\n<span style=\"--shiki-light:#{light};--shiki-dark:#{dark};--shiki-custom:#{custom};\">code</span>\n```\n\nWhen set to `light-dark()`, the default color will be rendered as `light-dark(#{light}, #{dark})`.\n\n```html\n<span style=\"color:light-dark(#{light}, #{dark});--shiki-dark:#{dark};--shiki-custom:#{custom};\">code</span>\n```",
          "tags": [
            [
              "default",
              "'light'"
            ]
          ],
          "start": 175,
          "length": 12,
          "target": "defaultColor",
          "line": 8,
          "character": 2
        }
      ],
      "code": "import { codeToHtml } from 'shiki'\n\nconst code = await codeToHtml('console.log(\"hello\")', {\n  lang: 'javascript',\n  themes: {\n    light: 'min-light',\n    dark: 'nord',\n  },\n  defaultColor: 'light-dark()', // [!code hl]\n})",
      "meta": {
        "extension": "ts"
      }
    }
  }
}