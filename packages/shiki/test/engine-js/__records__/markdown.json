[
  {
    "constractor": [
      [
        "(^|\\￿)[ ]{0,3}([\\*\\-\\_])([ ]{0,2}\\2){2,}[ \\t]*$\\n?",
        "(?:^|\\￿)[ ]{0,3}(#{1,6}\\s+(.*?)(\\s+#{1,6})?\\s*)$",
        "(^|\\￿)[ ]{0,3}(>) ?",
        "(^|\\￿)([ ]{0,3})([*+-])([ \\t])",
        "(^|\\￿)([ ]{0,3})(\\d+[\\.\\)])([ \\t])",
        "(^|\\￿)(\\s*)(`{3,}|~{3,})\\s*(?i:(markdown|md)((\\s+|:|,|\\{|\\?)[^`]*)?$)",
        "(^|\\￿)(\\s*)(`{3,}|~{3,})\\s*(?=([^`]*)?$)",
        "(^|\\￿)([ ]{4}|\\t)",
        "\\s*(\\[)([^]]+?)(\\])(:)[ \\t]*(?:(<)((?:\\\\[<>]|[^<>\\n])*)(>)|(\\S+?))[ \\t]*(?:((\\().+?(\\)))|((\").+?(\"))|((').+?(')))?\\s*$",
        "(^|\\￿)\\s*(<!--)",
        "(^|\\￿)(\\|)(?=[^|].+\\|\\s*$)",
        "(^|\\￿)[ ]{0,3}(?=[^ \\t\\n])"
      ]
    ],
    "executions": [
      {
        "args": [
          "# Header\n",
          0
        ],
        "result": {
          "index": 1,
          "captureIndices": [
            {
              "start": 0,
              "end": 9,
              "length": 9
            },
            {
              "start": 0,
              "end": 9,
              "length": 9
            },
            {
              "start": 2,
              "end": 8,
              "length": 6
            },
            {
              "start": 4294967295,
              "end": 4294967295,
              "length": 0
            }
          ]
        }
      },
      {
        "args": [
          "look like:\n",
          0
        ],
        "result": {
          "index": 11,
          "captureIndices": [
            {
              "start": 0,
              "end": 0,
              "length": 0
            },
            {
              "start": 0,
              "end": 0,
              "length": 0
            }
          ]
        }
      }
    ]
  },
  {
    "constractor": [
      [
        "(#{6})\\s+(.*?)(?:\\s+(#+))?\\s*$",
        "(#{5})\\s+(.*?)(?:\\s+(#+))?\\s*$",
        "(#{4})\\s+(.*?)(?:\\s+(#+))?\\s*$",
        "(#{3})\\s+(.*?)(?:\\s+(#+))?\\s*$",
        "(#{2})\\s+(.*?)(?:\\s+(#+))?\\s*$",
        "(#{1})\\s+(.*?)(?:\\s+(#+))?\\s*$"
      ]
    ],
    "executions": [
      {
        "args": [
          "# Header\n",
          0
        ],
        "result": {
          "index": 5,
          "captureIndices": [
            {
              "start": 0,
              "end": 9,
              "length": 9
            },
            {
              "start": 0,
              "end": 1,
              "length": 1
            },
            {
              "start": 2,
              "end": 8,
              "length": 6
            },
            {
              "start": 4294967295,
              "end": 4294967295,
              "length": 0
            }
          ]
        }
      },
      {
        "args": [
          "# Header\n",
          9
        ],
        "result": null
      }
    ]
  },
  {
    "constractor": [
      [
        "&(?!([a-zA-Z0-9]+|#\\d+|#x[0-9a-fA-F]+);)",
        "<(?![a-zA-Z/?\\$!])",
        "(?<open>(\\*\\*(?=\\w)|(?<!\\w)\\*\\*|(?<!\\w)\\b__))(?=\\S)(?=(<[^>]*+>|(?<raw>`+)([^`]|(?!(?<!`)\\k<raw>(?!`))`)*+\\k<raw>|\\\\[\\\\`*_{}\\[\\]()#.!+\\->]?+|\\[((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+\\](([ ]?\\[[^\\]]*+\\])|(\\([ \\t]*+<?(.*?)>?[ \\t]*+((?<title>['\"])(.*?)\\k<title>)?\\))))|(?!(?<=\\S)\\k<open>).)++(?<=\\S)(?=__\\b|\\*\\*)\\k<open>)",
        "(?<open>(\\*(?=\\w)|(?<!\\w)\\*|(?<!\\w)\\b_))(?=\\S)(?=(<[^>]*+>|(?<raw>`+)([^`]|(?!(?<!`)\\k<raw>(?!`))`)*+\\k<raw>|\\\\[\\\\`*_{}\\[\\]()#.!+\\->]?+|\\[((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+\\](([ ]?\\[[^\\]]*+\\])|(\\([ \\t]*+<?(.*?)>?[ \\t]*+((?<title>['\"])(.*?)\\k<title>)?\\))))|\\k<open>\\k<open>|(?!(?<=\\S)\\k<open>).)++(?<=\\S)(?=_\\b|\\*)\\k<open>)",
        "(`+)((?:[^`]|(?!(?<!`)\\1(?!`))`)*+)(\\1)",
        "(?<!\\\\)(~{2,})((?:[^~]|(?!(?<![~\\\\])\\1(?!~))~)*+)(\\1)",
        "\\\\[-`*_#+.!(){}\\[\\]\\\\>]",
        "(\\!\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])(\\()[ \\t]*((<)((?:\\\\[<>]|[^<>\\n])*)(>)|((?<url>(?>[^\\s()]+)|\\(\\g<url>*\\))*))[ \\t]*(?:((\\().+?(\\)))|((\").+?(\"))|((').+?(')))?\\s*(\\))",
        "(\\!\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])[ ]?(\\[)(.*?)(\\])",
        "(<)((?:mailto:)?[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)(>)",
        "(<)((?:https?|ftp)://.*?)(>)",
        "(\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])(\\()[ \\t]*((<)((?:\\\\[<>]|[^<>\\n])*)(>)|((?<url>(?>[^\\s()]+)|\\(\\g<url>*\\))*))[ \\t]*(?:((\\()[^()]*(\\)))|((\")[^\"]*(\"))|((')[^']*(')))?\\s*(\\))",
        "(?<![\\]\\\\])(\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])(\\[)([^\\]]*+)(\\])",
        "(?<![\\]\\\\])(\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])[ ]?(\\[)(\\])",
        "(?<![\\]\\\\])(\\[)((?:[^\\s\\[\\]\\\\]|\\\\[\\[\\]])+?)((?<!\\\\)\\])"
      ]
    ],
    "executions": [
      {
        "args": [
          "# Header",
          2
        ],
        "result": null
      }
    ]
  },
  {
    "constractor": [
      [
        "(^|\\￿)[ ]{0,3}([\\*\\-\\_])([ ]{0,2}\\2){2,}[ \\t]*$\\n?",
        "(?:^|\\￿)[ ]{0,3}(#{1,6}\\s+(.*?)(\\s+#{1,6})?\\s*)$",
        "(^|\\￿)[ ]{0,3}(>) ?",
        "(^|\\￿)([ ]{0,3})([*+-])([ \\t])",
        "(^|\\￿)([ ]{0,3})(\\d+[\\.\\)])([ \\t])",
        "(^|\\￿)(\\s*)(`{3,}|~{3,})\\s*(?i:(markdown|md)((\\s+|:|,|\\{|\\?)[^`]*)?$)",
        "(^|\\￿)(\\s*)(`{3,}|~{3,})\\s*(?=([^`]*)?$)",
        "(^|\\￿)([ ]{4}|\\t)",
        "\\s*(\\[)([^]]+?)(\\])(:)[ \\t]*(?:(<)((?:\\\\[<>]|[^<>\\n])*)(>)|(\\S+?))[ \\t]*(?:((\\().+?(\\)))|((\").+?(\"))|((').+?(')))?\\s*$",
        "(^|\\￿)\\s*(<!--)",
        "(^|\\￿)(\\|)(?=[^|].+\\|\\s*$)",
        "(^|\\￿)[ ]{0,3}(?=[^ \\t\\n])"
      ]
    ],
    "executions": [
      {
        "args": [
          "# Header\n",
          9
        ],
        "result": null
      },
      {
        "args": [
          "This is a paragraph\n",
          0
        ],
        "result": {
          "index": 11,
          "captureIndices": [
            {
              "start": 0,
              "end": 0,
              "length": 0
            },
            {
              "start": 0,
              "end": 0,
              "length": 0
            }
          ]
        }
      },
      {
        "args": [
          "```ts\n",
          0
        ],
        "result": {
          "index": 6,
          "captureIndices": [
            {
              "start": 0,
              "end": 3,
              "length": 3
            },
            {
              "start": 0,
              "end": 0,
              "length": 0
            },
            {
              "start": 0,
              "end": 0,
              "length": 0
            },
            {
              "start": 0,
              "end": 3,
              "length": 3
            },
            {
              "start": 3,
              "end": 6,
              "length": 3
            }
          ]
        }
      },
      {
        "args": [
          "```\n",
          4
        ],
        "result": null
      },
      {
        "args": [
          "  * this one\n",
          0
        ],
        "result": {
          "index": 3,
          "captureIndices": [
            {
              "start": 0,
              "end": 4,
              "length": 4
            },
            {
              "start": 0,
              "end": 0,
              "length": 0
            },
            {
              "start": 0,
              "end": 2,
              "length": 2
            },
            {
              "start": 2,
              "end": 3,
              "length": 1
            },
            {
              "start": 3,
              "end": 4,
              "length": 1
            }
          ]
        }
      },
      {
        "args": [
          "and this\n",
          0
        ],
        "result": {
          "index": 11,
          "captureIndices": [
            {
              "start": 0,
              "end": 0,
              "length": 0
            },
            {
              "start": 0,
              "end": 0,
              "length": 0
            }
          ]
        }
      }
    ]
  },
  {
    "constractor": [
      [
        "&(?!([a-zA-Z0-9]+|#\\d+|#x[0-9a-fA-F]+);)",
        "<(?![a-zA-Z/?\\$!])",
        "(?<open>(\\*\\*(?=\\w)|(?<!\\w)\\*\\*|(?<!\\w)\\b__))(?=\\S)(?=(<[^>]*+>|(?<raw>`+)([^`]|(?!(?<!`)\\k<raw>(?!`))`)*+\\k<raw>|\\\\[\\\\`*_{}\\[\\]()#.!+\\->]?+|\\[((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+\\](([ ]?\\[[^\\]]*+\\])|(\\([ \\t]*+<?(.*?)>?[ \\t]*+((?<title>['\"])(.*?)\\k<title>)?\\))))|(?!(?<=\\S)\\k<open>).)++(?<=\\S)(?=__\\b|\\*\\*)\\k<open>)",
        "(?<open>(\\*(?=\\w)|(?<!\\w)\\*|(?<!\\w)\\b_))(?=\\S)(?=(<[^>]*+>|(?<raw>`+)([^`]|(?!(?<!`)\\k<raw>(?!`))`)*+\\k<raw>|\\\\[\\\\`*_{}\\[\\]()#.!+\\->]?+|\\[((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+\\](([ ]?\\[[^\\]]*+\\])|(\\([ \\t]*+<?(.*?)>?[ \\t]*+((?<title>['\"])(.*?)\\k<title>)?\\))))|\\k<open>\\k<open>|(?!(?<=\\S)\\k<open>).)++(?<=\\S)(?=_\\b|\\*)\\k<open>)",
        "(`+)((?:[^`]|(?!(?<!`)\\1(?!`))`)*+)(\\1)",
        "(?<!\\\\)(~{2,})((?:[^~]|(?!(?<![~\\\\])\\1(?!~))~)*+)(\\1)",
        "\\\\[-`*_#+.!(){}\\[\\]\\\\>]",
        "(\\!\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])(\\()[ \\t]*((<)((?:\\\\[<>]|[^<>\\n])*)(>)|((?<url>(?>[^\\s()]+)|\\(\\g<url>*\\))*))[ \\t]*(?:((\\().+?(\\)))|((\").+?(\"))|((').+?(')))?\\s*(\\))",
        "(\\!\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])[ ]?(\\[)(.*?)(\\])",
        "(<)((?:mailto:)?[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)(>)",
        "(<)((?:https?|ftp)://.*?)(>)",
        "(\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])(\\()[ \\t]*((<)((?:\\\\[<>]|[^<>\\n])*)(>)|((?<url>(?>[^\\s()]+)|\\(\\g<url>*\\))*))[ \\t]*(?:((\\()[^()]*(\\)))|((\")[^\"]*(\"))|((')[^']*(')))?\\s*(\\))",
        "(?<![\\]\\\\])(\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])(\\[)([^\\]]*+)(\\])",
        "(?<![\\]\\\\])(\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])[ ]?(\\[)(\\])",
        "(?<![\\]\\\\])(\\[)((?:[^\\s\\[\\]\\\\]|\\\\[\\[\\]])+?)((?<!\\\\)\\])",
        "^(={3,})(?=[ \\t]*$\\n?)",
        "^(-{3,})(?=[ \\t]*$\\n?)"
      ]
    ],
    "executions": [
      {
        "args": [
          "This is a paragraph\n",
          0
        ],
        "result": null
      },
      {
        "args": [
          "look like:\n",
          0
        ],
        "result": null
      },
      {
        "args": [
          "  * this one\n",
          4
        ],
        "result": null
      },
      {
        "args": [
          "  * that one\n",
          4
        ],
        "result": null
      },
      {
        "args": [
          "  * the other one\n",
          4
        ],
        "result": null
      },
      {
        "args": [
          "and this\n",
          0
        ],
        "result": null
      }
    ]
  },
  {
    "constractor": [
      [
        "(^|\\￿)((?=\\s*[-=]{3,}\\s*$)|[ ]{4,}(?=[^ \\t\\n]))"
      ]
    ],
    "executions": [
      {
        "args": [
          "```ts\n",
          0
        ],
        "result": null
      },
      {
        "args": [
          "  * this one\n",
          0
        ],
        "result": null
      }
    ]
  },
  {
    "constractor": [
      [
        "(^|\\G)(|\\s{0,3})(```)\\s*$"
      ]
    ],
    "executions": [
      {
        "args": [
          "```ts\n",
          3
        ],
        "result": null
      }
    ]
  },
  {
    "constractor": [
      [
        "(^|\\￿)(|\\s{0,3})(```)\\s*$"
      ]
    ],
    "executions": [
      {
        "args": [
          "const foo = \"bar\"\n",
          0
        ],
        "result": null
      },
      {
        "args": [
          "```\n",
          0
        ],
        "result": {
          "index": 0,
          "captureIndices": [
            {
              "start": 0,
              "end": 4,
              "length": 4
            },
            {
              "start": 0,
              "end": 0,
              "length": 0
            },
            {
              "start": 0,
              "end": 0,
              "length": 0
            },
            {
              "start": 0,
              "end": 3,
              "length": 3
            }
          ]
        }
      }
    ]
  },
  {
    "constractor": [
      [
        "(^|\\G)[ ]{0,3}([\\*\\-\\_])([ ]{0,2}\\2){2,}[ \\t]*$\\n?",
        "(?:^|\\G)[ ]{0,3}(#{1,6}\\s+(.*?)(\\s+#{1,6})?\\s*)$",
        "(^|\\G)[ ]{0,3}(>) ?",
        "(^|\\G)([ ]{0,3})([*+-])([ \\t])",
        "(^|\\G)([ ]{0,3})(\\d+[\\.\\)])([ \\t])",
        "(^|\\G)(\\s*)(`{3,}|~{3,})\\s*(?i:(markdown|md)((\\s+|:|,|\\{|\\?)[^`]*)?$)",
        "(^|\\G)(\\s*)(`{3,}|~{3,})\\s*(?=([^`]*)?$)",
        "(^|\\G)([ ]{4}|\\t)",
        "\\s*(\\[)([^]]+?)(\\])(:)[ \\t]*(?:(<)((?:\\\\[<>]|[^<>\\n])*)(>)|(\\S+?))[ \\t]*(?:((\\().+?(\\)))|((\").+?(\"))|((').+?(')))?\\s*$",
        "(^|\\G)\\s*(<!--)",
        "(^|\\G)(\\|)(?=[^|].+\\|\\s*$)",
        "(^|\\G)[ ]{0,3}(?=[^ \\t\\n])",
        "(^|\\G)(?=\\S)(?![*+->]\\s|\\d+\\.\\s)"
      ]
    ],
    "executions": [
      {
        "args": [
          "  * this one\n",
          4
        ],
        "result": {
          "index": 11,
          "captureIndices": [
            {
              "start": 4,
              "end": 4,
              "length": 0
            },
            {
              "start": 4,
              "end": 4,
              "length": 0
            }
          ]
        }
      },
      {
        "args": [
          "  * that one\n",
          2
        ],
        "result": {
          "index": 3,
          "captureIndices": [
            {
              "start": 2,
              "end": 4,
              "length": 2
            },
            {
              "start": 2,
              "end": 2,
              "length": 0
            },
            {
              "start": 2,
              "end": 2,
              "length": 0
            },
            {
              "start": 2,
              "end": 3,
              "length": 1
            },
            {
              "start": 3,
              "end": 4,
              "length": 1
            }
          ]
        }
      },
      {
        "args": [
          "  * that one\n",
          4
        ],
        "result": {
          "index": 11,
          "captureIndices": [
            {
              "start": 4,
              "end": 4,
              "length": 0
            },
            {
              "start": 4,
              "end": 4,
              "length": 0
            }
          ]
        }
      },
      {
        "args": [
          "  * the other one\n",
          2
        ],
        "result": {
          "index": 3,
          "captureIndices": [
            {
              "start": 2,
              "end": 4,
              "length": 2
            },
            {
              "start": 2,
              "end": 2,
              "length": 0
            },
            {
              "start": 2,
              "end": 2,
              "length": 0
            },
            {
              "start": 2,
              "end": 3,
              "length": 1
            },
            {
              "start": 3,
              "end": 4,
              "length": 1
            }
          ]
        }
      },
      {
        "args": [
          "  * the other one\n",
          4
        ],
        "result": {
          "index": 11,
          "captureIndices": [
            {
              "start": 4,
              "end": 4,
              "length": 0
            },
            {
              "start": 4,
              "end": 4,
              "length": 0
            }
          ]
        }
      }
    ]
  },
  {
    "constractor": [
      [
        "((^|\\￿)([ ]{2,4}|\\t))|(^[ \\t]*$)"
      ]
    ],
    "executions": [
      {
        "args": [
          "  * that one\n",
          0
        ],
        "result": {
          "index": 0,
          "captureIndices": [
            {
              "start": 0,
              "end": 2,
              "length": 2
            },
            {
              "start": 0,
              "end": 2,
              "length": 2
            },
            {
              "start": 0,
              "end": 0,
              "length": 0
            },
            {
              "start": 0,
              "end": 2,
              "length": 2
            },
            {
              "start": 4294967295,
              "end": 4294967295,
              "length": 0
            }
          ]
        }
      },
      {
        "args": [
          "  * the other one\n",
          0
        ],
        "result": {
          "index": 0,
          "captureIndices": [
            {
              "start": 0,
              "end": 2,
              "length": 2
            },
            {
              "start": 0,
              "end": 2,
              "length": 2
            },
            {
              "start": 0,
              "end": 0,
              "length": 0
            },
            {
              "start": 0,
              "end": 2,
              "length": 2
            },
            {
              "start": 4294967295,
              "end": 4294967295,
              "length": 0
            }
          ]
        }
      },
      {
        "args": [
          "and this\n",
          0
        ],
        "result": null
      }
    ]
  },
  {
    "constractor": [
      [
        "(^|\\G)((?=\\s*[-=]{3,}\\s*$)|[ ]{4,}(?=[^ \\t\\n]))"
      ]
    ],
    "executions": [
      {
        "args": [
          "  * that one\n",
          2
        ],
        "result": null
      }
    ]
  },
  {
    "constractor": [
      [
        "((^|\\G)([ ]{2,4}|\\t))|(^[ \\t]*$)"
      ]
    ],
    "executions": [
      {
        "args": [
          "  * the other one\n",
          2
        ],
        "result": null
      }
    ]
  }
]
